{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKIRA\\\\Desktop\\\\web-demo\\\\Project\\\\Frontend-next-js-V1\\\\src\\\\context\\\\AuthContextProvider.tsx\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Router from 'next/router';\nimport { ME } from '../apollo/queries';\n//อันนี้จะเป็นค่าเริ่มต้น\nconst initialState = {\n  authAction: 'close',\n  handleAuthAction: () => {},\n  loggedInUser: null,\n  setAuthUser: () => {}\n};\nexport const AuthContext = createContext(initialState);\n\nconst AuthContextProvider = ({\n  children\n}) => {\n  const {\n    0: authAction,\n    1: setAuthAction\n  } = useState('close');\n  const {\n    0: loggedInUser,\n    1: setLoggedInUser\n  } = useState(null);\n  const {\n    data\n  } = useQuery(ME);\n  useEffect(() => {\n    if (data === null || data === void 0 ? void 0 : data.me) setLoggedInUser(data.me);\n  }, [data === null || data === void 0 ? void 0 : data.me]);\n  useEffect(() => {\n    const syncSignout = e => {\n      if (e.key === 'signout') {\n        // Log user out\n        setLoggedInUser(null); // Push user to home page\n\n        Router.push('/');\n      }\n    };\n\n    window.addEventListener('storage', syncSignout);\n    return () => window.removeEventListener('storage', syncSignout);\n  }, []);\n\n  const handleAuthAction = action => {\n    setAuthAction(action);\n  };\n\n  const setAuthUser = user => setLoggedInUser(user);\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      authAction,\n      handleAuthAction,\n      loggedInUser,\n      setAuthUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["C:/Users/AKIRA/Desktop/web-demo/Project/Frontend-next-js-V1/src/context/AuthContextProvider.tsx"],"names":["React","createContext","useState","useEffect","useQuery","Router","ME","initialState","authAction","handleAuthAction","loggedInUser","setAuthUser","AuthContext","AuthContextProvider","children","setAuthAction","setLoggedInUser","data","me","syncSignout","e","key","push","window","addEventListener","removeEventListener","action","user"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,SAASC,EAAT,QAAmB,mBAAnB;AAiBA;AACA,MAAMC,YAA+B,GAAG;AACtCC,EAAAA,UAAU,EAAE,OAD0B;AAEtCC,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CAFY;AAGtCC,EAAAA,YAAY,EAAE,IAHwB;AAItCC,EAAAA,WAAW,EAAE,MAAM,CAAE;AAJiB,CAAxC;AAOA,OAAO,MAAMC,WAAW,GAAGX,aAAa,CAAoBM,YAApB,CAAjC;;AAEP,MAAMM,mBAAoC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7D,QAAM;AAAA,OAACN,UAAD;AAAA,OAAaO;AAAb,MAA8Bb,QAAQ,CAAU,OAAV,CAA5C;AACA,QAAM;AAAA,OAACQ,YAAD;AAAA,OAAeM;AAAf,MAAkCd,QAAQ,CAAc,IAAd,CAAhD;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAAWb,QAAQ,CAAeE,EAAf,CAAzB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,EAAV,EAAcF,eAAe,CAACC,IAAI,CAACC,EAAN,CAAf;AACf,GAFQ,EAEN,CAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEC,EAAP,CAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,WAAW,GAAIC,CAAD,IAAqB;AACvC,UAAIA,CAAC,CAACC,GAAF,KAAU,SAAd,EAAyB;AACvB;AACAL,QAAAA,eAAe,CAAC,IAAD,CAAf,CAFuB,CAIvB;;AACAX,QAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACD;AACF,KARD;;AAUAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCL,WAAnC;AAEA,WAAO,MAAMI,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCN,WAAtC,CAAb;AACD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMV,gBAAkC,GAAIiB,MAAD,IAAY;AACrDX,IAAAA,aAAa,CAACW,MAAD,CAAb;AACD,GAFD;;AAIA,QAAMf,WAAW,GAAIgB,IAAD,IAAuBX,eAAe,CAACW,IAAD,CAA1D;;AAEA,SACE,MAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLnB,MAAAA,UADK;AAELC,MAAAA,gBAFK;AAGLC,MAAAA,YAHK;AAILC,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGG,QARH,CADF;AAYD,CA5CD;;AA8CA,eAAeD,mBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport Router from 'next/router'\r\n\r\nimport { User } from '../types'\r\nimport { ME } from '../apollo/queries'\r\n\r\ninterface Props {}\r\n\r\ntype Actions = 'signup' | 'signin' | 'request' | 'reset' | 'close' | 'createFactory'\r\n\r\ntype HandleAuthAction = (action: Actions) => void\r\n\r\n// อันนี้จะเป็น Type\r\ninterface AuthContextValues {\r\n  authAction: Actions\r\n  handleAuthAction: HandleAuthAction\r\n  loggedInUser: User | null\r\n  setAuthUser: (user: User | null) => void\r\n}\r\n\r\n\r\n//อันนี้จะเป็นค่าเริ่มต้น\r\nconst initialState: AuthContextValues = {\r\n  authAction: 'close',\r\n  handleAuthAction: () => {},\r\n  loggedInUser: null,\r\n  setAuthUser: () => {},\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextValues>(initialState)\r\n\r\nconst AuthContextProvider: React.FC<Props> = ({ children }) => {\r\n  const [authAction, setAuthAction] = useState<Actions>('close')\r\n  const [loggedInUser, setLoggedInUser] = useState<User | null>(null)\r\n\r\n  const { data } = useQuery<{ me: User }>(ME)\r\n\r\n  useEffect(() => {\r\n    if (data?.me) setLoggedInUser(data.me)\r\n  }, [data?.me])\r\n\r\n  useEffect(() => {\r\n    const syncSignout = (e: StorageEvent) => {\r\n      if (e.key === 'signout') {\r\n        // Log user out\r\n        setLoggedInUser(null)\r\n\r\n        // Push user to home page\r\n        Router.push('/')\r\n      }\r\n    }\r\n\r\n    window.addEventListener('storage', syncSignout)\r\n\r\n    return () => window.removeEventListener('storage', syncSignout)\r\n  }, [])\r\n\r\n  const handleAuthAction: HandleAuthAction = (action) => {\r\n    setAuthAction(action)\r\n  }\r\n\r\n  const setAuthUser = (user: User | null) => setLoggedInUser(user)\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        authAction,\r\n        handleAuthAction,\r\n        loggedInUser,\r\n        setAuthUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContextProvider\r\n"]},"metadata":{},"sourceType":"module"}