{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKIRA\\\\Desktop\\\\web-demo\\\\Project\\\\Frontend-next-js-V1\\\\src\\\\pages\\\\admin.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Loader from 'react-loader-spinner';\nimport Admin from '../components/Admin';\nimport { AuthContext } from '../context/AuthContextProvider';\nimport { isAdmin } from '../helpers/authHelpers';\nexport default function AdminPage() {\n  const {\n    loggedInUser\n  } = useContext(AuthContext);\n  const router = useRouter();\n  useEffect(() => {\n    // If user in not authenticated, push to home page\n    if (!loggedInUser) {\n      router.push('/');\n    } else {\n      if (!isAdmin(loggedInUser)) {\n        // Push user to their dashboard\n        router.push('/dashboard');\n        alert('No Authorization.');\n      }\n    }\n  }, [loggedInUser]);\n  return !isAdmin(loggedInUser) ? __jsx(Loader, {\n    type: \"Oval\",\n    color: \"teal\",\n    height: 30,\n    width: 30,\n    timeout: 30000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }) : __jsx(Admin, {\n    admin: loggedInUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/AKIRA/Desktop/web-demo/Project/Frontend-next-js-V1/src/pages/admin.tsx"],"names":["useContext","useEffect","useRouter","Loader","Admin","AuthContext","isAdmin","AdminPage","loggedInUser","router","push","alert"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAmBR,UAAU,CAACK,WAAD,CAAnC;AAEA,QAAMI,MAAM,GAAGP,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACO,YAAL,EAAmB;AACjBC,MAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD,KAFD,MAEO;AACL,UAAI,CAACJ,OAAO,CAACE,YAAD,CAAZ,EAA4B;AAC1B;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAY,YAAZ;AACAC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF;AACF,GAXQ,EAWN,CAACH,YAAD,CAXM,CAAT;AAaA,SAAO,CAACF,OAAO,CAACE,YAAD,CAAR,GACL,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAC,MAA1B;AAAiC,IAAA,MAAM,EAAE,EAAzC;AAA6C,IAAA,KAAK,EAAE,EAApD;AAAwD,IAAA,OAAO,EAAE,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AAKD","sourcesContent":["import { useContext, useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport Admin from '../components/Admin'\r\nimport { AuthContext } from '../context/AuthContextProvider'\r\nimport { isAdmin } from '../helpers/authHelpers'\r\n\r\nexport default function AdminPage() {\r\n  const { loggedInUser } = useContext(AuthContext)\r\n\r\n  const router = useRouter()\r\n\r\n  useEffect(() => {\r\n    // If user in not authenticated, push to home page\r\n    if (!loggedInUser) {\r\n      router.push('/')\r\n    } else {\r\n      if (!isAdmin(loggedInUser)) {\r\n        // Push user to their dashboard\r\n        router.push('/dashboard')\r\n        alert('No Authorization.')\r\n      }\r\n    }\r\n  }, [loggedInUser])\r\n\r\n  return !isAdmin(loggedInUser) ? (\r\n    <Loader type='Oval' color='teal' height={30} width={30} timeout={30000} />\r\n  ) : (\r\n    <Admin admin={loggedInUser} />\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}