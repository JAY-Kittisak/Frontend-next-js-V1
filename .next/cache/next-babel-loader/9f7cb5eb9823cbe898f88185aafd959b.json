{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\AKIRA\\\\Desktop\\\\web-demo\\\\Project\\\\Frontend-next-js-V1\\\\src\\\\components\\\\Layout.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\\n   html {\\n      box-sizing: border-box;\\n      font-size: 10px;\\n   }\\n   *, *:before, *:after {\\n      box-sizing: inherit;\\n   }\\n   body {\\n      margin: 0;\\n      padding: 0;\\n      font-size: 1.4rem;\\n      font-family: 'Noto Sans', sans-serif;\\n      font-family: 'Roboto', sans-serif;\\n      font-weight: 400;\\n   }\\n\\n   button {\\n    border: none;\\n    background: white;\\n    font-size: 1.5rem;\\n    color: \", \";\\n    padding: 0.5rem 1rem;\\n    border-radius: \", \";\\n    cursor: pointer;\\n    transition: background-color \", \" ease-in;\\n\\n    &:hover {\\n        background: \", \";\\n    }\\n   }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useEffect } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { config, dom } from '@fortawesome/fontawesome-svg-core';\nimport '../fontAwesome';\nimport { theme } from '../theme';\nimport NavBar from './NavBar';\nimport { AuthContext } from '../context/AuthContextProvider';\nimport Backdrop from './modal/Backdrop';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\nimport CreateFactory from './tire/CreateFactory';\nimport RequestResetPassword from './RequestResetPassword';\nimport ResetPassword from './ResetPassword';\nconfig.autoAddCss = false;\nvar GlobalStyle = createGlobalStyle(_templateObject(), dom.css(), function (props) {\n  return props.theme.colors.darkTeal;\n}, function (props) {\n  return props.theme.radius;\n}, function (props) {\n  return props.theme.transition;\n}, function (props) {\n  return props.theme.colors.lightGrey;\n});\n_c = GlobalStyle;\nvar StyledPage = styled.div.withConfig({\n  displayName: \"Layout__StyledPage\",\n  componentId: \"jic6k6-0\"\n})([\"background:white;color:\", \";\"], function (props) {\n  return props.theme.fontColors.primary;\n});\n_c2 = StyledPage;\nvar DisplayedPage = styled.div.withConfig({\n  displayName: \"Layout__DisplayedPage\",\n  componentId: \"jic6k6-1\"\n})([\"width:80%;margin:0 auto;padding:2rem;display:flex;justify-content:center;\"]);\n_c3 = DisplayedPage;\n\nvar Layout = function Layout(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(AuthContext),\n      authAction = _useContext.authAction,\n      handleAuthAction = _useContext.handleAuthAction;\n\n  var _useRouter = useRouter(),\n      asPath = _useRouter.asPath,\n      replace = _useRouter.replace,\n      pathname = _useRouter.pathname,\n      query = _useRouter.query;\n\n  useEffect(function () {\n    if (asPath === '/dashboard#_=_' || asPath === '/dashboard#') {\n      replace('/dashboard');\n    }\n\n    if (asPath === '/#_=_' || asPath === '/#') {\n      replace('/');\n    }\n  }, [asPath, replace]);\n  useEffect(function () {\n    if (query === null || query === void 0 ? void 0 : query.resetToken) handleAuthAction('reset');\n  }, [query]);\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, __jsx(GlobalStyle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), __jsx(StyledPage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, pathname === '/' ? 'HOME' : pathname.split('/')[1].toUpperCase()), __jsx(\"meta\", {\n    charSet: \"utf-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Noto+Sans&family=Roboto&display=swap\",\n    rel: \"stylesheet\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), __jsx(NavBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), __jsx(DisplayedPage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(React.Fragment, null, children), __jsx(React.Fragment, null, authAction !== 'close' && __jsx(React.Fragment, null, authAction === 'signup' && __jsx(React.Fragment, null, __jsx(Backdrop, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }\n  }), __jsx(SignUp, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  })), authAction === 'signin' && __jsx(React.Fragment, null, __jsx(Backdrop, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }), __jsx(SignIn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  })), authAction === 'createFactory' && __jsx(React.Fragment, null, __jsx(Backdrop, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }\n  }), __jsx(CreateFactory, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  })), authAction === 'request' && __jsx(React.Fragment, null, __jsx(Backdrop, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }\n  }), __jsx(RequestResetPassword, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  })), authAction === 'reset' && __jsx(React.Fragment, null, __jsx(Backdrop, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  }), __jsx(ResetPassword, {\n    token: query === null || query === void 0 ? void 0 : query.resetToken,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }))))))));\n};\n\n_s(Layout, \"Y06Gpyqr/divpvV+jHXq++vKAcU=\", false, function () {\n  return [useRouter];\n});\n\n_c4 = Layout;\nexport default Layout;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"StyledPage\");\n$RefreshReg$(_c3, \"DisplayedPage\");\n$RefreshReg$(_c4, \"Layout\");","map":{"version":3,"sources":["C:/Users/AKIRA/Desktop/web-demo/Project/Frontend-next-js-V1/src/components/Layout.tsx"],"names":["React","useContext","useEffect","Head","useRouter","styled","createGlobalStyle","ThemeProvider","config","dom","theme","NavBar","AuthContext","Backdrop","SignUp","SignIn","CreateFactory","RequestResetPassword","ResetPassword","autoAddCss","GlobalStyle","css","props","colors","darkTeal","radius","transition","lightGrey","StyledPage","div","fontColors","primary","DisplayedPage","Layout","children","authAction","handleAuthAction","asPath","replace","pathname","query","resetToken","split","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport Head from 'next/head'\r\nimport { useRouter } from 'next/router'\r\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components'\r\nimport { config, dom } from '@fortawesome/fontawesome-svg-core'\r\n\r\nimport '../fontAwesome'\r\n\r\nimport { theme } from '../theme'\r\nimport NavBar from './NavBar'\r\nimport { AuthContext } from '../context/AuthContextProvider'\r\nimport Backdrop from './modal/Backdrop'\r\nimport SignUp from './SignUp'\r\nimport SignIn from './SignIn'\r\nimport CreateFactory from './tire/CreateFactory'\r\nimport RequestResetPassword from './RequestResetPassword'\r\nimport ResetPassword from './ResetPassword'\r\n\r\nconfig.autoAddCss = false\r\n\r\ninterface Props {\r\n  title?: string\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${dom.css()}\r\n\r\n   html {\r\n      box-sizing: border-box;\r\n      font-size: 10px;\r\n   }\r\n   *, *:before, *:after {\r\n      box-sizing: inherit;\r\n   }\r\n   body {\r\n      margin: 0;\r\n      padding: 0;\r\n      font-size: 1.4rem;\r\n      font-family: 'Noto Sans', sans-serif;\r\n      font-family: 'Roboto', sans-serif;\r\n      font-weight: 400;\r\n   }\r\n\r\n   button {\r\n    border: none;\r\n    background: white;\r\n    font-size: 1.5rem;\r\n    color: ${(props) => props.theme.colors.darkTeal};\r\n    padding: 0.5rem 1rem;\r\n    border-radius: ${(props) => props.theme.radius};\r\n    cursor: pointer;\r\n    transition: background-color ${(props) => props.theme.transition} ease-in;\r\n\r\n    &:hover {\r\n        background: ${(props) => props.theme.colors.lightGrey};\r\n    }\r\n   }\r\n`\r\n\r\nconst StyledPage = styled.div`\r\n  background: white;\r\n  color: ${(props) => props.theme.fontColors.primary};\r\n`\r\n\r\nconst DisplayedPage = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Layout: React.FC<Props> = ({ children }) => {\r\n  const { authAction, handleAuthAction } = useContext(AuthContext)\r\n\r\n  const { asPath, replace, pathname, query } = useRouter()\r\n\r\n  useEffect(() => {\r\n    if (asPath === '/dashboard#_=_' || asPath === '/dashboard#') {\r\n      replace('/dashboard')\r\n    }\r\n\r\n    if (asPath === '/#_=_' || asPath === '/#') {\r\n      replace('/')\r\n    }\r\n  }, [asPath, replace])\r\n\r\n  useEffect(() => {\r\n    if (query?.resetToken) handleAuthAction('reset')\r\n  }, [query])\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <>\r\n        <GlobalStyle />\r\n        <StyledPage>\r\n          <Head>\r\n            <title>\r\n              {pathname === '/' ? 'HOME' : pathname.split('/')[1].toUpperCase()}\r\n            </title>\r\n            <meta charSet='utf-8' />\r\n            <meta\r\n              name='viewport'\r\n              content='initial-scale=1.0, width=device-width'\r\n            />\r\n            <link\r\n              href='https://fonts.googleapis.com/css2?family=Noto+Sans&family=Roboto&display=swap'\r\n              rel='stylesheet'\r\n            />\r\n          </Head>\r\n\r\n          <NavBar />\r\n\r\n          <DisplayedPage>\r\n            <>{children}</>\r\n            <>\r\n              {authAction !== 'close' && (\r\n                <>\r\n                  {authAction === 'signup' && (\r\n                    <>\r\n                      <Backdrop />\r\n                      <SignUp />\r\n                    </>\r\n                  )}\r\n                  {authAction === 'signin' && (\r\n                    <>\r\n                      <Backdrop />\r\n                      <SignIn />\r\n                    </>\r\n                  )}\r\n                  {authAction === 'createFactory' && (\r\n                    <>\r\n                      <Backdrop />\r\n                      <CreateFactory />\r\n                    </>\r\n                  )}\r\n                  {authAction === 'request' && (\r\n                    <>\r\n                      <Backdrop />\r\n                      <RequestResetPassword />\r\n                    </>\r\n                  )}\r\n                  {authAction === 'reset' && (\r\n                    <>\r\n                      <Backdrop />\r\n                      <ResetPassword token={query?.resetToken as string} />\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          </DisplayedPage>\r\n        </StyledPage>\r\n      </>\r\n    </ThemeProvider>\r\n  )\r\n}\r\nexport default Layout\r\n"]},"metadata":{},"sourceType":"module"}