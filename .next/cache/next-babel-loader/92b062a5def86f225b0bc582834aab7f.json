{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKIRA\\\\Desktop\\\\web-demo\\\\Project\\\\Frontend-next-js-V1\\\\src\\\\components\\\\AdminRow.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Loader from 'react-loader-spinner';\nimport { isSuperAdmin } from '../helpers/authHelpers';\nimport { UPDATE_ROLES, DELETE_USER } from '../apollo/mutations';\nimport { QUERY_USERS } from '../apollo/queries';\nconst DeleteBtn = styled.button.withConfig({\n  displayName: \"AdminRow__DeleteBtn\",\n  componentId: \"sb10jn-0\"\n})([\"background:red;color:white;&:hover{background:orange;}\"]);\n\nconst AdminRow = ({\n  user,\n  admin\n}) => {\n  const {\n    roles\n  } = user;\n  const initialState = {\n    CLIENT: roles.includes('CLIENT'),\n    ITEMEDITOR: roles.includes('ITEMEDITOR'),\n    ADMIN: roles.includes('ADMIN')\n  };\n  const {\n    0: isEditing,\n    1: setIsEditing\n  } = useState(false);\n  const {\n    0: roleState,\n    1: setRoleState\n  } = useState(initialState);\n  const [updateRoles, {\n    loading,\n    error\n  }] = useMutation(UPDATE_ROLES);\n  useEffect(() => {\n    var _error$graphQLErrors$;\n\n    if (error) alert(((_error$graphQLErrors$ = error.graphQLErrors[0]) === null || _error$graphQLErrors$ === void 0 ? void 0 : _error$graphQLErrors$.message) || 'Sorry, something went wrong');\n  }, [error]);\n\n  const handleSubmitUpdateRoles = async userId => {\n    try {\n      var _response$data;\n\n      const newRoles = [];\n      Object.entries(roleState).forEach(([k, v]) => v ? newRoles.push(k) : null); // {ITEMEDITOR: true, ADMIN: false} --> [[ITEMEDITOR, true], [ADMIN, false]]\n      // Check if the user.roles array has not been changed --> do not call to backend\n\n      if (user.roles.length === newRoles.length) {\n        const checkRoles = user.roles.map(role => newRoles.includes(role));\n\n        if (!checkRoles.includes(false)) {\n          alert('Nothing change');\n          return;\n        }\n      }\n\n      const response = await updateRoles({\n        variables: {\n          userId,\n          newRoles\n        },\n        refetchQueries: [{\n          query: QUERY_USERS\n        }]\n      });\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.updateRoles) {\n        setIsEditing(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const [deleteUser, deleteUserRes] = useMutation(DELETE_USER);\n  useEffect(() => {\n    var _deleteUserRes$error$;\n\n    if (deleteUserRes.error) alert((_deleteUserRes$error$ = deleteUserRes.error.graphQLErrors[0]) === null || _deleteUserRes$error$ === void 0 ? void 0 : _deleteUserRes$error$.message);\n  }, [deleteUserRes.error]);\n\n  const handleDeleteUser = async userId => {\n    try {\n      var _res$data;\n\n      const res = await deleteUser({\n        variables: {\n          userId\n        },\n        refetchQueries: [{\n          query: QUERY_USERS\n        }]\n      });\n\n      if ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.deleteUser.message) {\n        var _res$data2;\n\n        alert((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.deleteUser.message);\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return __jsx(\"tr\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, user.username), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, user.email), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, user.createdAt), isSuperAdmin(admin) && __jsx(React.Fragment, null, __jsx(\"td\", {\n    style: {\n      background: !isEditing ? 'white' : undefined,\n      cursor: isEditing ? 'pointer' : undefined\n    },\n    className: \"td_role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: ['fas', 'check-circle'],\n    className: \"true\",\n    size: \"lg\",\n    style: {\n      color: 'black',\n      cursor: 'not-allowed'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), __jsx(\"td\", {\n    style: {\n      background: !isEditing ? 'white' : undefined,\n      cursor: isEditing ? 'pointer' : undefined\n    },\n    className: \"td_role\",\n    onClick: isEditing ? () => setRoleState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      ITEMEDITOR: !prev.ITEMEDITOR\n    })) : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, roleState.ITEMEDITOR ? __jsx(FontAwesomeIcon, {\n    icon: ['fas', 'check-circle'],\n    className: \"true\",\n    size: \"lg\",\n    style: {\n      color: !isEditing ? 'black' : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: ['fas', 'times-circle'],\n    className: \"false\",\n    size: \"lg\",\n    style: {\n      color: !isEditing ? 'lightgray' : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  })), __jsx(\"td\", {\n    style: {\n      background: !isEditing ? 'white' : undefined,\n      cursor: isEditing ? 'pointer' : undefined\n    },\n    className: \"td_role\",\n    onClick: isEditing ? () => setRoleState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      ADMIN: !prev.ADMIN\n    })) : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, __jsx(React.Fragment, null, roleState.ADMIN ? __jsx(FontAwesomeIcon, {\n    icon: ['fas', 'check-circle'],\n    className: \"true\",\n    size: \"lg\",\n    style: {\n      color: !isEditing ? 'black' : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: ['fas', 'times-circle'],\n    className: \"false\",\n    size: \"lg\",\n    style: {\n      color: !isEditing ? 'lightgray' : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }))), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, isSuperAdmin(user) && __jsx(FontAwesomeIcon, {\n    style: {\n      cursor: 'not-allowed'\n    },\n    icon: ['fas', 'check-circle'],\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  })), loading ? __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, __jsx(Loader, {\n    type: \"Oval\",\n    color: \"teal\",\n    width: 30,\n    height: 30,\n    timeout: 30000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  })) : isEditing ? __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"role_action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: ['fas', 'times'],\n    color: \"red\",\n    onClick: () => {\n      setRoleState(initialState);\n      setIsEditing(false);\n    },\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  })), __jsx(\"button\", {\n    onClick: () => handleSubmitUpdateRoles(user.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: ['fas', 'check'],\n    color: \"teal\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }\n  })))) : __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    onClick: () => setIsEditing(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, \"Edit\")), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, isSuperAdmin(user) ? null : __jsx(DeleteBtn, {\n    style: {\n      cursor: isEditing ? 'not-allowed' : undefined\n    },\n    disabled: isEditing,\n    onClick: () => {\n      if (!confirm('Are you sure to delete this user?')) return;\n      handleDeleteUser(user.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, deleteUserRes.loading ? __jsx(Loader, {\n    type: \"Oval\",\n    color: \"teal\",\n    width: 30,\n    height: 30,\n    timeout: 30000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: ['fas', 'trash-alt'],\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  })))));\n};\n\nexport default AdminRow;","map":{"version":3,"sources":["C:/Users/AKIRA/Desktop/web-demo/Project/Frontend-next-js-V1/src/components/AdminRow.tsx"],"names":["React","useState","useEffect","useMutation","styled","FontAwesomeIcon","Loader","isSuperAdmin","UPDATE_ROLES","DELETE_USER","QUERY_USERS","DeleteBtn","button","AdminRow","user","admin","roles","initialState","CLIENT","includes","ITEMEDITOR","ADMIN","isEditing","setIsEditing","roleState","setRoleState","updateRoles","loading","error","alert","graphQLErrors","message","handleSubmitUpdateRoles","userId","newRoles","Object","entries","forEach","k","v","push","length","checkRoles","map","role","response","variables","refetchQueries","query","data","console","log","deleteUser","deleteUserRes","handleDeleteUser","res","id","username","email","createdAt","background","undefined","cursor","color","prev","confirm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useMutation } from '@apollo/client'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { User, Role } from '../types'\r\nimport { isSuperAdmin } from '../helpers/authHelpers'\r\nimport { UPDATE_ROLES, DELETE_USER } from '../apollo/mutations'\r\nimport { QUERY_USERS } from '../apollo/queries'\r\n\r\ninterface Props {\r\n  user: User\r\n  admin: User | null\r\n}\r\n\r\nconst DeleteBtn = styled.button`\r\n  background: red;\r\n  color: white;\r\n\r\n  &:hover {\r\n    background: orange;\r\n  }\r\n`\r\n\r\nconst AdminRow: React.FC<Props> = ({ user, admin }) => {\r\n  const { roles } = user\r\n  const initialState = {\r\n    CLIENT: roles.includes('CLIENT'),\r\n    ITEMEDITOR: roles.includes('ITEMEDITOR'),\r\n    ADMIN: roles.includes('ADMIN'),\r\n  }\r\n\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [roleState, setRoleState] = useState(initialState)\r\n\r\n  const [updateRoles, { loading, error }] = useMutation<\r\n    { updateRoles: User },\r\n    { userId: string; newRoles: Role[] }\r\n  >(UPDATE_ROLES)\r\n\r\n  useEffect(() => {\r\n    if (error)\r\n      alert(error.graphQLErrors[0]?.message || 'Sorry, something went wrong')\r\n  }, [error])\r\n\r\n  const handleSubmitUpdateRoles = async (userId: string) => {\r\n    try {\r\n      const newRoles: Role[] = []\r\n\r\n      Object.entries(roleState).forEach(([k, v]) =>\r\n        v ? newRoles.push(k as Role) : null\r\n      ) // {ITEMEDITOR: true, ADMIN: false} --> [[ITEMEDITOR, true], [ADMIN, false]]\r\n\r\n      // Check if the user.roles array has not been changed --> do not call to backend\r\n      if (user.roles.length === newRoles.length) {\r\n        const checkRoles = user.roles.map((role) => newRoles.includes(role))\r\n\r\n        if (!checkRoles.includes(false)) {\r\n          alert('Nothing change')\r\n          return\r\n        }\r\n      }\r\n\r\n      const response = await updateRoles({\r\n        variables: { userId, newRoles },\r\n        refetchQueries: [{ query: QUERY_USERS }],\r\n      })\r\n\r\n      if (response.data?.updateRoles) {\r\n        setIsEditing(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const [deleteUser, deleteUserRes] = useMutation<\r\n    { deleteUser: { message: string } },\r\n    { userId: string }\r\n  >(DELETE_USER)\r\n\r\n  useEffect(() => {\r\n    if (deleteUserRes.error)\r\n      alert(deleteUserRes.error.graphQLErrors[0]?.message)\r\n  }, [deleteUserRes.error])\r\n\r\n  const handleDeleteUser = async (userId: string) => {\r\n    try {\r\n      const res = await deleteUser({\r\n        variables: { userId },\r\n        refetchQueries: [{ query: QUERY_USERS }],\r\n      })\r\n\r\n      if (res.data?.deleteUser.message) {\r\n        alert(res.data?.deleteUser.message)\r\n      }\r\n    } catch (error) {\r\n      alert((error as Error).message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr key={user.id}>\r\n      {/* Name */}\r\n      <td>{user.username}</td>\r\n\r\n      {/* Email */}\r\n      <td>{user.email}</td>\r\n\r\n      {/* CreatedAt */}\r\n      <td>{user.createdAt}</td>\r\n\r\n      {/* Manage Roles Section */}\r\n      {/* client role */}\r\n      {isSuperAdmin(admin) && (\r\n        <>\r\n          <td\r\n            style={{\r\n              background: !isEditing ? 'white' : undefined,\r\n              cursor: isEditing ? 'pointer' : undefined,\r\n            }}\r\n            className='td_role'\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={['fas', 'check-circle']}\r\n              className='true'\r\n              size='lg'\r\n              style={{ color: 'black', cursor: 'not-allowed' }}\r\n            />\r\n          </td>\r\n\r\n          {/* item editor role */}\r\n          <td\r\n            style={{\r\n              background: !isEditing ? 'white' : undefined,\r\n              cursor: isEditing ? 'pointer' : undefined,\r\n            }}\r\n            className='td_role'\r\n            onClick={\r\n              isEditing\r\n                ? () =>\r\n                    setRoleState((prev) => ({\r\n                      ...prev,\r\n                      ITEMEDITOR: !prev.ITEMEDITOR,\r\n                    }))\r\n                : undefined\r\n            }\r\n          >\r\n            {roleState.ITEMEDITOR ? (\r\n              <FontAwesomeIcon\r\n                icon={['fas', 'check-circle']}\r\n                className='true'\r\n                size='lg'\r\n                style={{ color: !isEditing ? 'black' : undefined }}\r\n              />\r\n            ) : (\r\n              <FontAwesomeIcon\r\n                icon={['fas', 'times-circle']}\r\n                className='false'\r\n                size='lg'\r\n                style={{ color: !isEditing ? 'lightgray' : undefined }}\r\n              />\r\n            )}\r\n          </td>\r\n\r\n          {/* admin role */}\r\n          <td\r\n            style={{\r\n              background: !isEditing ? 'white' : undefined,\r\n              cursor: isEditing ? 'pointer' : undefined,\r\n            }}\r\n            className='td_role'\r\n            onClick={\r\n              isEditing\r\n                ? () =>\r\n                    setRoleState((prev) => ({ ...prev, ADMIN: !prev.ADMIN }))\r\n                : undefined\r\n            }\r\n          >\r\n            <>\r\n              {roleState.ADMIN ? (\r\n                <FontAwesomeIcon\r\n                  icon={['fas', 'check-circle']}\r\n                  className='true'\r\n                  size='lg'\r\n                  style={{ color: !isEditing ? 'black' : undefined }}\r\n                />\r\n              ) : (\r\n                <FontAwesomeIcon\r\n                  icon={['fas', 'times-circle']}\r\n                  className='false'\r\n                  size='lg'\r\n                  style={{ color: !isEditing ? 'lightgray' : undefined }}\r\n                />\r\n              )}\r\n            </>\r\n          </td>\r\n\r\n          {/* super admin role */}\r\n          <td>\r\n            {isSuperAdmin(user) && (\r\n              <FontAwesomeIcon\r\n                style={{ cursor: 'not-allowed' }}\r\n                icon={['fas', 'check-circle']}\r\n                size='lg'\r\n              />\r\n            )}\r\n          </td>\r\n\r\n          {/* action */}\r\n          {loading ? (\r\n            <td>\r\n              <Loader\r\n                type='Oval'\r\n                color='teal'\r\n                width={30}\r\n                height={30}\r\n                timeout={30000}\r\n              />\r\n            </td>\r\n          ) : isEditing ? (\r\n            <td>\r\n              <p className='role_action'>\r\n                <button>\r\n                  <FontAwesomeIcon\r\n                    icon={['fas', 'times']}\r\n                    color='red'\r\n                    onClick={() => {\r\n                      setRoleState(initialState)\r\n                      setIsEditing(false)\r\n                    }}\r\n                    size='lg'\r\n                  />\r\n                </button>\r\n                <button onClick={() => handleSubmitUpdateRoles(user.id)}>\r\n                  <FontAwesomeIcon\r\n                    icon={['fas', 'check']}\r\n                    color='teal'\r\n                    size='lg'\r\n                  />\r\n                </button>\r\n              </p>\r\n            </td>\r\n          ) : (\r\n            <td>\r\n              <button onClick={() => setIsEditing(true)}>Edit</button>\r\n            </td>\r\n          )}\r\n\r\n          <td>\r\n            {isSuperAdmin(user) ? null : (\r\n              <DeleteBtn\r\n                style={{ cursor: isEditing ? 'not-allowed' : undefined }}\r\n                disabled={isEditing}\r\n                onClick={() => {\r\n                  if (!confirm('Are you sure to delete this user?')) return\r\n\r\n                  handleDeleteUser(user.id)\r\n                }}\r\n              >\r\n                {deleteUserRes.loading ? (\r\n                  <Loader\r\n                    type='Oval'\r\n                    color='teal'\r\n                    width={30}\r\n                    height={30}\r\n                    timeout={30000}\r\n                  />\r\n                ) : (\r\n                  <FontAwesomeIcon icon={['fas', 'trash-alt']} size='lg' />\r\n                )}\r\n              </DeleteBtn>\r\n            )}\r\n          </td>\r\n        </>\r\n      )}\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default AdminRow\r\n"]},"metadata":{},"sourceType":"module"}