{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\AKIRA\\\\Desktop\\\\web-demo\\\\Project\\\\Frontend-next-js-V1\\\\src\\\\context\\\\AuthContextProvider.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Router from 'next/router';\nimport { ME } from '../apollo/queries';\n//อันนี้จะเป็นค่าเริ่มต้น\nvar initialState = {\n  authAction: 'close',\n  handleAuthAction: function handleAuthAction() {},\n  loggedInUser: null,\n  setAuthUser: function setAuthUser() {}\n};\nexport var AuthContext = createContext(initialState);\n\nvar AuthContextProvider = function AuthContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState('close'),\n      authAction = _useState[0],\n      setAuthAction = _useState[1];\n\n  var _useState2 = useState(null),\n      loggedInUser = _useState2[0],\n      setLoggedInUser = _useState2[1]; // <---- ค่าเริ่มแรกให้เป็น Null\n  //loggedInUser ใช้จัดการ Component อื่น หรือ จัดการ Show Option ต่างๆ ถ้า Login โชว์อะไรบ้าง ถ้าไม่ Login โชว์อะไรบ้าง\n\n\n  var _useQuery = useQuery(ME),\n      data = _useQuery.data;\n\n  useEffect(function () {\n    if (data === null || data === void 0 ? void 0 : data.me) setLoggedInUser(data.me);\n  }, [data === null || data === void 0 ? void 0 : data.me]);\n  useEffect(function () {\n    var syncSignout = function syncSignout(e) {\n      if (e.key === 'signout') {\n        // Log user out\n        setLoggedInUser(null); // Push user to home page\n\n        Router.push('/');\n      }\n    };\n\n    window.addEventListener('storage', syncSignout);\n    return function () {\n      return window.removeEventListener('storage', syncSignout);\n    };\n  }, []);\n\n  var handleAuthAction = function handleAuthAction(action) {\n    setAuthAction(action);\n  };\n\n  var setAuthUser = function setAuthUser(user) {\n    return setLoggedInUser(user);\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      authAction: authAction,\n      handleAuthAction: handleAuthAction,\n      loggedInUser: loggedInUser,\n      setAuthUser: setAuthUser\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n_s(AuthContextProvider, \"PEsQOha3JL41RyB7KorqGq97vyo=\", false, function () {\n  return [useQuery];\n});\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/AKIRA/Desktop/web-demo/Project/Frontend-next-js-V1/src/context/AuthContextProvider.tsx"],"names":["React","createContext","useState","useEffect","useQuery","Router","ME","initialState","authAction","handleAuthAction","loggedInUser","setAuthUser","AuthContext","AuthContextProvider","children","setAuthAction","setLoggedInUser","data","me","syncSignout","e","key","push","window","addEventListener","removeEventListener","action","user"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,SAASC,EAAT,QAAmB,mBAAnB;AAiBA;AACA,IAAMC,YAA+B,GAAG;AACtCC,EAAAA,UAAU,EAAE,OAD0B;AAEtCC,EAAAA,gBAAgB,EAAE,4BAAM,CAAE,CAFY;AAGtCC,EAAAA,YAAY,EAAE,IAHwB;AAItCC,EAAAA,WAAW,EAAE,uBAAM,CAAE;AAJiB,CAAxC;AAOA,OAAO,IAAMC,WAAW,GAAGX,aAAa,CAAoBM,YAApB,CAAjC;;AAEP,IAAMM,mBAAoC,GAAG,SAAvCA,mBAAuC,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACvBZ,QAAQ,CAAU,OAAV,CADe;AAAA,MACpDM,UADoD;AAAA,MACxCO,aADwC;;AAAA,mBAEnBb,QAAQ,CAAc,IAAd,CAFW;AAAA,MAEpDQ,YAFoD;AAAA,MAEtCM,eAFsC,kBAEU;AACrE;;;AAH2D,kBAK1CZ,QAAQ,CAAeE,EAAf,CALkC;AAAA,MAKnDW,IALmD,aAKnDA,IALmD;;AAO3Dd,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIc,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,EAAV,EAAcF,eAAe,CAACC,IAAI,CAACC,EAAN,CAAf;AACjB,GAFQ,EAEN,CAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEC,EAAP,CAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMgB,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAqB;AACrC,UAAIA,CAAC,CAACC,GAAF,KAAU,SAAd,EAAyB;AACrB;AACAL,QAAAA,eAAe,CAAC,IAAD,CAAf,CAFqB,CAIrB;;AACAX,QAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACH;AACJ,KARD;;AAUAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCL,WAAnC;AAEA,WAAO;AAAA,aAAMI,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCN,WAAtC,CAAN;AAAA,KAAP;AACH,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAMV,gBAAkC,GAAG,SAArCA,gBAAqC,CAACiB,MAAD,EAAY;AACnDX,IAAAA,aAAa,CAACW,MAAD,CAAb;AACH,GAFD;;AAIA,MAAMf,WAAW,GAAG,SAAdA,WAAc,CAACgB,IAAD;AAAA,WAAuBX,eAAe,CAACW,IAAD,CAAtC;AAAA,GAApB;;AAEA,SACI,MAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHnB,MAAAA,UAAU,EAAVA,UADG;AAEHC,MAAAA,gBAAgB,EAAhBA,gBAFG;AAGHC,MAAAA,YAAY,EAAZA,YAHG;AAIHC,MAAAA,WAAW,EAAXA;AAJG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKG,QAPL,CADJ;AAWH,CA5CD;;GAAMD,mB;UAKeT,Q;;;KALfS,mB;AA8CN,eAAeA,mBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport Router from 'next/router'\r\n\r\nimport { User } from '../types'\r\nimport { ME } from '../apollo/queries'\r\n\r\ninterface Props {}\r\n\r\ntype Actions = 'signup' | 'signin' | 'request' | 'reset' | 'close' | 'createFactory'\r\n\r\ntype HandleAuthAction = (action: Actions) => void\r\n\r\n// อันนี้จะเป็น Type\r\ninterface AuthContextValues {\r\n    authAction: Actions;\r\n    handleAuthAction: HandleAuthAction;\r\n    loggedInUser: User | null; // ถ้า Login ให้เป็น User ถ้าไม่ Login ให้เป็น Null\r\n    setAuthUser: (user: User | null) => void;\r\n}\r\n\r\n\r\n//อันนี้จะเป็นค่าเริ่มต้น\r\nconst initialState: AuthContextValues = {\r\n  authAction: 'close',\r\n  handleAuthAction: () => {},\r\n  loggedInUser: null,\r\n  setAuthUser: () => {},\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextValues>(initialState)\r\n\r\nconst AuthContextProvider: React.FC<Props> = ({ children }) => {\r\n    const [authAction, setAuthAction] = useState<Actions>('close');\r\n    const [loggedInUser, setLoggedInUser] = useState<User | null>(null); // <---- ค่าเริ่มแรกให้เป็น Null\r\n    //loggedInUser ใช้จัดการ Component อื่น หรือ จัดการ Show Option ต่างๆ ถ้า Login โชว์อะไรบ้าง ถ้าไม่ Login โชว์อะไรบ้าง\r\n\r\n    const { data } = useQuery<{ me: User }>(ME);\r\n\r\n    useEffect(() => {\r\n        if (data?.me) setLoggedInUser(data.me);\r\n    }, [data?.me]);\r\n\r\n    useEffect(() => {\r\n        const syncSignout = (e: StorageEvent) => {\r\n            if (e.key === 'signout') {\r\n                // Log user out\r\n                setLoggedInUser(null);\r\n\r\n                // Push user to home page\r\n                Router.push('/');\r\n            }\r\n        };\r\n\r\n        window.addEventListener('storage', syncSignout);\r\n\r\n        return () => window.removeEventListener('storage', syncSignout);\r\n    }, []);\r\n\r\n    const handleAuthAction: HandleAuthAction = (action) => {\r\n        setAuthAction(action);\r\n    };\r\n\r\n    const setAuthUser = (user: User | null) => setLoggedInUser(user);\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                authAction,\r\n                handleAuthAction,\r\n                loggedInUser,\r\n                setAuthUser\r\n            }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContextProvider\r\n"]},"metadata":{},"sourceType":"module"}