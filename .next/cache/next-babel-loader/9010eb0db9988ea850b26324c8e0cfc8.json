{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\AKIRA\\\\Desktop\\\\web-demo\\\\Project\\\\Frontend-next-js-V1\\\\src\\\\components\\\\ResetPassword.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useForm, ErrorMessage } from 'react-hook-form';\nimport Loader from 'react-loader-spinner';\nimport Modal from './modal/Modal';\nimport { FormContainer, Header, StyledForm, InputContainer, Input, Button, StyledError, StyledInform } from './SignUp';\nimport { RESET_PASSWORD } from '../apollo/mutations';\nimport { AuthContext } from '../context/AuthContextProvider';\n\nvar ResetPassword = function ResetPassword(_ref) {\n  _s();\n\n  var _error$graphQLErrors$, _data$resetPassword;\n\n  var token = _ref.token;\n\n  var _useContext = useContext(AuthContext),\n      handleAuthAction = _useContext.handleAuthAction;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _useMutation = useMutation(RESET_PASSWORD),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      resetPassword = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  var handleSubmitResetPassword = handleSubmit( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var password;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              password = _ref2.password;\n              _context.next = 3;\n              return resetPassword({\n                variables: {\n                  token: token,\n                  password: password\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  return __jsx(Modal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(FormContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Enter your new password below.\")), __jsx(StyledForm, {\n    onSubmit: handleSubmitResetPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(InputContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Your password\",\n    ref: register({\n      required: 'Password is required.',\n      minLength: {\n        value: 6,\n        message: 'Password must be at least 6 characters.'\n      },\n      maxLength: {\n        value: 50,\n        message: 'Password must be not more than 50 characters.'\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }), __jsx(ErrorMessage, {\n    errors: errors,\n    name: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, function (_ref4) {\n    var message = _ref4.message;\n    return __jsx(StyledError, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 47\n      }\n    }, message);\n  })), __jsx(Button, {\n    disabled: loading,\n    style: {\n      cursor: loading ? 'not-allowed' : 'pointer'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, loading ? __jsx(Loader, {\n    type: \"Oval\",\n    color: \"white\",\n    height: 30,\n    width: 30,\n    timeout: 30000,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }) : 'Submit'), error && __jsx(StyledError, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, ((_error$graphQLErrors$ = error.graphQLErrors[0]) === null || _error$graphQLErrors$ === void 0 ? void 0 : _error$graphQLErrors$.message) || 'Sorry, something went wrong')), data && __jsx(StyledInform, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, (_data$resetPassword = data.resetPassword) === null || _data$resetPassword === void 0 ? void 0 : _data$resetPassword.message, ' ', __jsx(\"span\", {\n    style: {\n      cursor: 'pointer',\n      color: 'red'\n    },\n    onClick: function onClick() {\n      return handleAuthAction('signin');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"sign in\")))));\n};\n\n_s(ResetPassword, \"YFIL2VMeqcGrNqxSGMDL/YFXpcM=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/AKIRA/Desktop/web-demo/Project/Frontend-next-js-V1/src/components/ResetPassword.tsx"],"names":["React","useContext","useMutation","useForm","ErrorMessage","Loader","Modal","FormContainer","Header","StyledForm","InputContainer","Input","Button","StyledError","StyledInform","RESET_PASSWORD","AuthContext","ResetPassword","token","handleAuthAction","register","handleSubmit","errors","resetPassword","loading","error","data","handleSubmitResetPassword","password","variables","required","minLength","value","message","maxLength","cursor","graphQLErrors","color"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useForm, ErrorMessage } from 'react-hook-form';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport Modal from './modal/Modal';\r\nimport {\r\n    FormContainer,\r\n    Header,\r\n    StyledForm,\r\n    InputContainer,\r\n    Input,\r\n    Button,\r\n    StyledError,\r\n    StyledInform\r\n} from './SignUp';\r\nimport { RESET_PASSWORD } from '../apollo/mutations';\r\nimport { AuthContext } from '../context/AuthContextProvider';\r\n\r\nconst ResetPassword: React.FC<{ token: string }> = ({ token }) => {\r\n    const { handleAuthAction } = useContext(AuthContext);\r\n    const { register, handleSubmit, errors } = useForm<{ password: string }>();\r\n\r\n    const [resetPassword, { loading, error, data }] = useMutation<\r\n        { resetPassword: { message: string } },\r\n        { token: string; password: string }\r\n    >(RESET_PASSWORD);\r\n\r\n    const handleSubmitResetPassword = handleSubmit(async ({ password }) => {\r\n        await resetPassword({ variables: { token, password } });\r\n    });\r\n\r\n    return (\r\n        <Modal>\r\n            <FormContainer>\r\n                <Header>\r\n                    <h4>Enter your new password below.</h4>\r\n                </Header>\r\n\r\n                <StyledForm onSubmit={handleSubmitResetPassword}>\r\n                    <InputContainer>\r\n                        <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Your password\"\r\n                            ref={register({\r\n                                required: 'Password is required.',\r\n                                minLength: {\r\n                                    value: 6,\r\n                                    message: 'Password must be at least 6 characters.'\r\n                                },\r\n                                maxLength: {\r\n                                    value: 50,\r\n                                    message: 'Password must be not more than 50 characters.'\r\n                                }\r\n                            })}\r\n                        />\r\n\r\n                        <ErrorMessage errors={errors} name=\"password\">\r\n                            {({ message }) => <StyledError>{message}</StyledError>}\r\n                        </ErrorMessage>\r\n                    </InputContainer>\r\n\r\n                    <Button\r\n                        disabled={loading}\r\n                        style={{ cursor: loading ? 'not-allowed' : 'pointer' }}>\r\n                        {loading ? (\r\n                            <Loader\r\n                                type=\"Oval\"\r\n                                color=\"white\"\r\n                                height={30}\r\n                                width={30}\r\n                                timeout={30000}\r\n                            />\r\n                        ) : (\r\n                            'Submit'\r\n                        )}\r\n                    </Button>\r\n\r\n                    {error && (\r\n                        <StyledError>\r\n                            {error.graphQLErrors[0]?.message || 'Sorry, something went wrong'}\r\n                        </StyledError>\r\n                    )}\r\n                </StyledForm>\r\n\r\n                {data && (\r\n                    <StyledInform>\r\n                        <p>\r\n                            {data.resetPassword?.message}{' '}\r\n                            <span\r\n                                style={{ cursor: 'pointer', color: 'red' }}\r\n                                onClick={() => handleAuthAction('signin')}>\r\n                                sign in\r\n                            </span>\r\n                        </p>\r\n                    </StyledInform>\r\n                )}\r\n            </FormContainer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}